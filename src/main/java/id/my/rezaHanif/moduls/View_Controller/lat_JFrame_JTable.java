/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package id.my.rezaHanif.moduls.View_Controller;

import id.my.rezaHanif.moduls.Data.DataPassword;
import id.my.rezaHanif.moduls.Data.PasswordStore;

import javax.swing.table.AbstractTableModel;
import java.util.ArrayList;

/**
 *
 * @author REZA
 */
public class lat_JFrame_JTable extends javax.swing.JFrame {
    ArrayList<PasswordStore> passData;
    AbstractTableModel model;
    String[] columnNames = {"Title", "Username", "Password", "Hash Key", "Category", "Score"};



    /**
     * Creates new form lat_JFrame_JTable
     */
    public lat_JFrame_JTable() {
        DataPassword.loadCSVData(); // Memuat data dari CSV
        passData = DataPassword.passData;
        initComponents();
        initTable();
        tbl_dt.setModel(model);
        model.fireTableDataChanged();
    }

    private void initTable() {
        model = new AbstractTableModel() {
            @Override
            public int getRowCount() {
                return passData.size();
            }

            @Override
            public int getColumnCount() {
                return columnNames.length;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                if(columnIndex == 0){
                    return passData.get(rowIndex).name;
                } else if(columnIndex == 1){
                    return passData.get(rowIndex).username;
                } else if(columnIndex == 2){
                    return passData.get(rowIndex).password;
                } else if(columnIndex == 3){
                    return passData.get(rowIndex).getHashkey();
                } else if(columnIndex == 4){
                    // Cek apakah getCategory() mengembalikan string yang dapat diubah menjadi integer
                    String category = passData.get(rowIndex).getCategory();
                    try {
                        int categoryIndex = Integer.parseInt(category);
                        return PasswordStore.CATEGORIES[categoryIndex];
                    } catch (NumberFormatException e) {
                        // Jika getCategory() tidak dapat diubah menjadi integer, kembalikan string asli
                        return category;
                    }
                } else {
                    return passData.get(rowIndex).getScore();
                }
            }

            @Override
            public String getColumnName(int column) {
                return columnNames[column];
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_table = new javax.swing.JPanel();
        lb_chose = new javax.swing.JLabel();
        cb_chose = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_dt = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lb_chose.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lb_chose.setText("Urutkan Berdasarkan: ");

        cb_chose.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cb_chose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Username", "Category", "Score" }));
        cb_chose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_choseActionPerformed(evt);
            }
        });

        tbl_dt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title", "Username", "Password", "Hash Key", "Category", "Score"
            }
        ));
        jScrollPane1.setViewportView(tbl_dt);

        javax.swing.GroupLayout pnl_tableLayout = new javax.swing.GroupLayout(pnl_table);
        pnl_table.setLayout(pnl_tableLayout);
        pnl_tableLayout.setHorizontalGroup(
            pnl_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_tableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_chose, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cb_chose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );
        pnl_tableLayout.setVerticalGroup(
            pnl_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_tableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_chose, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_chose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_choseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_choseActionPerformed
            String selected = (String) cb_chose.getSelectedItem();
            switch (selected) {
                case "Title":
                    passData.sort(Controller_JFrom.TitleComparator);
                    break;
                case "Username":
                    passData.sort(Controller_JFrom.UsernameComparator);
                    break;
                case "Score":
                    passData.sort(Controller_JFrom.ScoreComparator);
                    break;
                case "Category":
                    passData.sort(Controller_JFrom.CategoryComparator);
                    break;
            }
            model.fireTableDataChanged(); // Update GUI table setelah memilih jenis sorting
        }//GEN-LAST:event_cb_choseActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_chose;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_chose;
    private javax.swing.JPanel pnl_table;
    private javax.swing.JTable tbl_dt;
    // End of variables declaration//GEN-END:variables
}
